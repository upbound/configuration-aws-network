apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xnetworks.aws.platform.upbound.io
  labels:
    provider: aws
    type: basic
spec:
  writeConnectionSecretsToNamespace: upbound-system
  compositeTypeRef:
    apiVersion: aws.platform.upbound.io/v1alpha1
    kind: XNetwork
  patchSets:
    - name: providerConfigRef
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.providerConfigName
          toFieldPath: spec.providerConfigRef.name
    - name: deletionPolicy
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.deletionPolicy
          toFieldPath: spec.deletionPolicy
    - name: network-id
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.id
          toFieldPath: metadata.labels[networks.aws.platform.upbound.io/network-id]
    - name: network-id-tags
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.id
          toFieldPath: spec.forProvider.tags[networks.aws.platform.upbound.io/network-id]
    - name: region
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.region
          toFieldPath: spec.forProvider.region
  resources:
    - name: vpc
      base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: VPC
        spec:
          forProvider:
            cidrBlock: 192.168.0.0/16
            enableDnsSupport: true
            enableDnsHostnames: true
            tags:
              Name: ""
      patches:
        - type: PatchSet
          patchSetName: providerConfigRef
        - type: PatchSet
          patchSetName: deletionPolicy
        - type: PatchSet
          patchSetName: network-id
        - type: PatchSet
          patchSetName: region
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.tags["Name"]
    - name: internetGateway
      base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: InternetGateway
        spec:
          forProvider:
            vpcIdSelector:
              matchControllerRef: true
      patches:
        - type: PatchSet
          patchSetName: providerConfigRef
        - type: PatchSet
          patchSetName: deletionPolicy
        - type: PatchSet
          patchSetName: network-id
        - type: PatchSet
          patchSetName: region
    - name: subnetPublicA
      base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: Subnet
        metadata:
          labels:
            access: public
        spec:
          forProvider:
            mapPublicIpOnLaunch: true
            cidrBlock: 192.168.0.0/18
            vpcIdSelector:
              matchControllerRef: true
            tags:
              kubernetes.io/role/elb: "1"
      patches:
        - type: PatchSet
          patchSetName: providerConfigRef
        - type: PatchSet
          patchSetName: deletionPolicy
        - type: PatchSet
          patchSetName: network-id
        - type: PatchSet
          patchSetName: network-id-tags
        - type: PatchSet
          patchSetName: region
        - fromFieldPath: spec.parameters.region
          toFieldPath: spec.forProvider.availabilityZone
          transforms:
          - type: string
            string:
              fmt: "%sa"
        - fromFieldPath: spec.parameters.region
          toFieldPath: metadata.labels[zone]
          transforms:
          - type: string
            string:
              fmt: "%sa"
        - type: ToCompositeFieldPath
          fromFieldPath: metadata.annotations[crossplane.io/external-name]
          toFieldPath: status.subnetIds[0]
    - name: subnetPublicB
      base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: Subnet
        metadata:
          labels:
            access: public
        spec:
          forProvider:
            mapPublicIpOnLaunch: true
            cidrBlock: 192.168.64.0/18
            vpcIdSelector:
              matchControllerRef: true
            tags:
              kubernetes.io/role/elb: "1"
      patches:
        - type: PatchSet
          patchSetName: providerConfigRef
        - type: PatchSet
          patchSetName: deletionPolicy
        - type: PatchSet
          patchSetName: network-id
        - type: PatchSet
          patchSetName: network-id-tags
        - type: PatchSet
          patchSetName: region
        - fromFieldPath: spec.parameters.region
          toFieldPath: spec.forProvider.availabilityZone
          transforms:
          - type: string
            string:
              fmt: "%sb"
        - fromFieldPath: spec.parameters.region
          toFieldPath: metadata.labels[zone]
          transforms:
          - type: string
            string:
              fmt: "%sb"
        - type: ToCompositeFieldPath
          fromFieldPath: metadata.annotations[crossplane.io/external-name]
          toFieldPath: status.subnetIds[1]
    - name: subnetPrivateA
      base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: Subnet
        metadata:
          labels:
            access: private
        spec:
          forProvider:
            cidrBlock: 192.168.128.0/18
            vpcIdSelector:
              matchControllerRef: true
            tags:
              kubernetes.io/role/internal-elb: "1"
      patches:
        - type: PatchSet
          patchSetName: providerConfigRef
        - type: PatchSet
          patchSetName: deletionPolicy
        - type: PatchSet
          patchSetName: network-id
        - type: PatchSet
          patchSetName: region
        - fromFieldPath: spec.parameters.region
          toFieldPath: spec.forProvider.availabilityZone
          transforms:
          - type: string
            string:
              fmt: "%sa"
        - fromFieldPath: spec.parameters.region
          toFieldPath: metadata.labels[zone]
          transforms:
          - type: string
            string:
              fmt: "%sa"
        - type: ToCompositeFieldPath
          fromFieldPath: metadata.annotations[crossplane.io/external-name]
          toFieldPath: status.subnetIds[2]
    - name: subnetPrivateB
      base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: Subnet
        metadata:
          labels:
            access: private
        spec:
          forProvider:
            cidrBlock: 192.168.192.0/18
            vpcIdSelector:
              matchControllerRef: true
            tags:
              kubernetes.io/role/internal-elb: "1"
      patches:
        - type: PatchSet
          patchSetName: providerConfigRef
        - type: PatchSet
          patchSetName: deletionPolicy
        - type: PatchSet
          patchSetName: network-id
        - type: PatchSet
          patchSetName: region
        - fromFieldPath: spec.parameters.region
          toFieldPath: spec.forProvider.availabilityZone
          transforms:
          - type: string
            string:
              fmt: "%sb"
        - fromFieldPath: spec.parameters.region
          toFieldPath: metadata.labels[zone]
          transforms:
          - type: string
            string:
              fmt: "%sb"
        - type: ToCompositeFieldPath
          fromFieldPath: metadata.annotations[crossplane.io/external-name]
          toFieldPath: status.subnetIds[3]
    - name: routeTable
      base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: RouteTable
        spec:
          forProvider:
            vpcIdSelector:
              matchControllerRef: true
      patches:
        - type: PatchSet
          patchSetName: providerConfigRef
        - type: PatchSet
          patchSetName: deletionPolicy
        - type: PatchSet
          patchSetName: network-id
        - type: PatchSet
          patchSetName: region
    - name: route
      base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: Route
        spec:
          forProvider:
            destinationCidrBlock: 0.0.0.0/0
            gatewayIdSelector:
              matchControllerRef: true
            routeTableIdSelector:
              matchControllerRef: true
      patches:
        - type: PatchSet
          patchSetName: providerConfigRef
        - type: PatchSet
          patchSetName: deletionPolicy
        - type: PatchSet
          patchSetName: network-id
        - type: PatchSet
          patchSetName: region
    - name: mainRouteTableAssociation
      base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: MainRouteTableAssociation
        spec:
          forProvider:
            routeTableIdSelector:
              matchControllerRef: true
            vpcIdSelector:
              matchControllerRef: true
      patches:
        - type: PatchSet
          patchSetName: providerConfigRef
        - type: PatchSet
          patchSetName: deletionPolicy
        - type: PatchSet
          patchSetName: network-id
        - type: PatchSet
          patchSetName: region
    - name: routeTableAssociationPublicA
      base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: RouteTableAssociation
        spec:
          forProvider:
            routeTableIdSelector:
              matchControllerRef: true
            subnetIdSelector:
              matchControllerRef: true
              matchLabels:
                access: public
      patches:
        - type: PatchSet
          patchSetName: providerConfigRef
        - type: PatchSet
          patchSetName: deletionPolicy
        - type: PatchSet
          patchSetName: network-id
        - type: PatchSet
          patchSetName: region
        - fromFieldPath: spec.parameters.region
          toFieldPath: spec.forProvider.subnetIdSelector.matchLabels[zone]
          transforms:
          - type: string
            string:
              fmt: "%sa"
    - name: routeTableAssociationPublicB
      base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: RouteTableAssociation
        spec:
          forProvider:
            routeTableIdSelector:
              matchControllerRef: true
            subnetIdSelector:
              matchControllerRef: true
              matchLabels:
                access: public
      patches:
        - type: PatchSet
          patchSetName: providerConfigRef
        - type: PatchSet
          patchSetName: deletionPolicy
        - type: PatchSet
          patchSetName: network-id
        - type: PatchSet
          patchSetName: region
        - fromFieldPath: spec.parameters.region
          toFieldPath: spec.forProvider.subnetIdSelector.matchLabels[zone]
          transforms:
          - type: string
            string:
              fmt: "%sb"
    - name: routeTableAssociationPrivateA
      base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: RouteTableAssociation
        spec:
          forProvider:
            routeTableIdSelector:
              matchControllerRef: true
            subnetIdSelector:
              matchControllerRef: true
              matchLabels:
                access: private
      patches:
        - type: PatchSet
          patchSetName: providerConfigRef
        - type: PatchSet
          patchSetName: deletionPolicy
        - type: PatchSet
          patchSetName: network-id
        - type: PatchSet
          patchSetName: region
        - fromFieldPath: spec.parameters.region
          toFieldPath: spec.forProvider.subnetIdSelector.matchLabels[zone]
          transforms:
          - type: string
            string:
              fmt: "%sa"
    - name: routeTableAssociationPrivateB
      base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: RouteTableAssociation
        spec:
          forProvider:
            routeTableIdSelector:
              matchControllerRef: true
            subnetIdSelector:
              matchControllerRef: true
              matchLabels:
                access: private
      patches:
        - type: PatchSet
          patchSetName: providerConfigRef
        - type: PatchSet
          patchSetName: deletionPolicy
        - type: PatchSet
          patchSetName: network-id
        - type: PatchSet
          patchSetName: region
        - fromFieldPath: spec.parameters.region
          toFieldPath: spec.forProvider.subnetIdSelector.matchLabels[zone]
          transforms:
          - type: string
            string:
              fmt: "%sb"
    - name: securityGroup
      base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: SecurityGroup
        spec:
          forProvider:
            vpcIdSelector:
              matchControllerRef: true
            name: platform-ref-aws-cluster
            description: Allow access to databases
      patches:
        - type: PatchSet
          patchSetName: providerConfigRef
        - type: PatchSet
          patchSetName: deletionPolicy
        - type: PatchSet
          patchSetName: network-id
        - type: PatchSet
          patchSetName: region
        - type: ToCompositeFieldPath
          fromFieldPath: metadata.annotations[crossplane.io/external-name]
          toFieldPath: status.securityGroupIds[0]
    - name: securityGroupRulePostgres
      base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: SecurityGroupRule
        spec:
          forProvider:
            type: ingress
            fromPort: 5432
            toPort: 5432
            protocol: tcp
            cidrBlocks:
              - 0.0.0.0/0
            securityGroupIdSelector:
              matchControllerRef: true
            description: Everywhere
      patches:
        - type: PatchSet
          patchSetName: providerConfigRef
        - type: PatchSet
          patchSetName: deletionPolicy
        - type: PatchSet
          patchSetName: network-id
        - type: PatchSet
          patchSetName: region
    - name: securityGroupRuleMysql
      base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: SecurityGroupRule
        spec:
          forProvider:
            type: ingress
            fromPort: 3306
            toPort: 3306
            protocol: tcp
            cidrBlocks:
              - 0.0.0.0/0
            securityGroupIdSelector:
              matchControllerRef: true
            description: Everywhere
      patches:
        - type: PatchSet
          patchSetName: providerConfigRef
        - type: PatchSet
          patchSetName: deletionPolicy
        - type: PatchSet
          patchSetName: network-id
        - type: PatchSet
          patchSetName: region
